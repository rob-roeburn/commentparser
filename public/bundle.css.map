{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n// Import fusioncharts plugin and initialise fcRoot\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport SvelteFC, {\n\tfcRoot\n} from 'svelte-fusioncharts';\nfcRoot(FusionCharts, Charts, FusionTheme);\n\n// Placeholder charts config - initialization prior to JSON being parsed\nlet comments = {};\nlet commentConfig = {\n\tid: 'commentChart',\n\ttype: 'column2d',\n\twidth: '100%',\n\theight: '30%',\n\tdataSource: {},\n\trenderAt: 'comment-container',\n};\n\nlet suffixes = {};\nlet suffixConfig = {\n\tid: 'suffixChart',\n\ttype: 'pie2d',\n\twidth: '100%',\n\theight: '30%',\n\tdataSource: {},\n\trenderAt: 'suffix-container'\n};\n\nlet keywords = {};\nlet keywordConfig = {\n\tid: 'keywordChart',\n\ttype: 'column2d',\n\twidth: '100%',\n\theight: '30%',\n\tdataSource: {},\n\trenderAt: 'keyword-container'\n};\n\n// Define default endpoint\nlet endpoint = 'https://jsonplaceholder.typicode.com/posts/1/comments';\n\n/**\n * parseJSON - async function to retrieve JSON object from endpoint, process into result array and then invoke visualisations\n */\nconst parseJSON = async () => {\n\t// Await fetch of  endpoint URL\n\tconst response = await fetch(endpoint);\n\t// Await response endpoint URL\n\tconst responsejson = await response.json();\n\t// Initialise resultData array and main elements as empty objs\n\tlet resultData = [];\n\tresultData['comments'] = {};\n\tresultData['suffixes'] = {};\n\tresultData['keywords'] = {};\n\t// Processing code - iterate over each comment once\n\tfor (let comment of responsejson) {\n\t\t// Get postId from comment and set new comments[postId] element to 1, or increment if the element exists already\n\t\tresultData['comments'][comment.postId] = typeof(resultData['comments'][comment.postId]) === 'undefined' ?\n\t\t\tresultData['comments'][comment.postId] = 1 :\n\t\t\tresultData['comments'][comment.postId] += 1;\n\t\t// Apply regex to set emailSuffix variable to domain suffix only\n\t\tlet emailSuffix = comment.email.replace(/[A-z0-9._]+@[A-z0-9._]+\\./, '');\n\t\t// Set new suffixes[emailSuffix] element to 1, or increment if the element exists already\n\t\tresultData['suffixes'][emailSuffix] = typeof(resultData['suffixes'][emailSuffix]) === 'undefined' ?\n\t\t\tresultData['suffixes'][emailSuffix] = 1 :\n\t\t\tresultData['suffixes'][emailSuffix] += 1;\n\t\t// Tokenise body data on both space and newline, iterate over each body element\n\t\tfor (let bodyElement of comment.body.split(/[\\n]|[\\ ]/)) {\n\t\t\t// Set new keywords[bodyElement] element to 1, or increment if the element exists already\n\t\t\tresultData['keywords'][bodyElement] = typeof(resultData['keywords'][bodyElement]) === 'undefined' ?\n\t\t\t\tresultData['keywords'][bodyElement] = 1 :\n\t\t\t\tresultData['keywords'][bodyElement] += 1;\n\t\t}\n\t}\n\t/**\n\t * Each comment iterated once - resultData now contains:\n\t * [comments] - each index is the post ID and the value is the number of posts per comment\n\t * [suffixes] - each index is the suffix ID and the value is the number of occurrences\n\t * [keywords] - each index is the keyword from the body and the value is the number of occurrences\n\t */\n\n\t// Convert resultData elemenst to label/value data format for FusionCharts\n\tcomments = Object.entries(resultData['comments']);\n\tlet commentData = [];\n\tfor (let comment in comments) {\n\t\tcommentData.push({\n\t\t\t'label': comments[comment][0],\n\t\t\t'value': comments[comment][1].toString()\n\t\t})\n\t};\n\tcommentConfig = {\n\t\tid: 'commentChart',\n\t\ttype: 'column2d',\n\t\twidth: '100%',\n\t\theight: '30%',\n\t\trenderAt: 'comment-container',\n\t\tdataSource: {\n\t\t\t'chart': {\n\t\t\t\t'caption': 'Comments Per Post',\n\t\t\t\t'showPercentInTooltip': '1',\n\t\t\t\t'xAxisName': 'Post ID',\n\t\t\t\t'yAxisName': 'Comments',\n\t\t\t\t'theme': 'fusion'\n\t\t\t},\n\t\t\t'data': commentData\n\t\t}\n\t};\n\n\tsuffixes = Object.entries(resultData['suffixes']);\n\tlet suffixData = [];\n\tfor (let suffix in suffixes) {\n\t\tsuffixData.push({\n\t\t\t'label': suffixes[suffix][0],\n\t\t\t'value': suffixes[suffix][1].toString()\n\t\t})\n\t};\n\tsuffixConfig = {\n\t\tid: 'suffixChart',\n\t\ttype: 'pie2d',\n\t\twidth: '100%',\n\t\theight: '30%',\n\t\trenderAt: 'suffix-container',\n\t\tdataSource: {\n\t\t\t'chart': {\n\t\t\t\t'caption': 'Email Suffix Distribution',\n\t\t\t\t'showPercentInTooltip': '1',\n\t\t\t\t'theme': 'fusion'\n\t\t\t},\n\t\t\t'data': suffixData\n\t\t}\n\t};\n\n\tkeywords = Object.entries(resultData['keywords']);\n\tlet keywordData = [];\n\tfor (let keyword in keywords) {\n\t\tkeywordData.push({\n\t\t\t'label': keywords[keyword][0],\n\t\t\t'value': keywords[keyword][1].toString()\n\t\t})\n\t};\n\tkeywordConfig = {\n\t\tid: 'keywordChart',\n\t\ttype: 'column2d',\n\t\twidth: '100%',\n\t\theight: '30%',\n\t\trenderAt: 'keyword-container',\n\t\tdataSource: {\n\t\t\t'chart': {\n\t\t\t\t'caption': 'Post Keyword Frequency',\n\t\t\t\t'showPercentInTooltip': '1',\n\t\t\t\t'theme': 'fusion'\n\t\t\t},\n\t\t\t'data': keywordData\n\t\t}\n\t};\n\n};\n// Invocation on load\nparseJSON();\n</script>\n\n<style>\n#endpoint {\n\twidth: 60%;\n}\n</style>\n\n<div id='endpoint-title'>Endpoint definition - press enter to reload : <input id='endpoint' bind:value={endpoint} on:change={parseJSON}></div >\n<div id='comment-container'><SvelteFC {...commentConfig}/></div ><hr />\n<div id='suffix-container'><SvelteFC {...suffixConfig}/></div><hr />\n<div id='keyword-container' ><SvelteFC {...keywordConfig}/></div ><hr />\n"
  ],
  "names": [],
  "mappings": "AAsKA,SAAS,cAAC,CAAC,AACV,KAAK,CAAE,GAAG,AACX,CAAC"
}